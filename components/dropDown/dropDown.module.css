/* display purposes - remove */
#app {
    display: flex;
    min-height: 50vh;
  }
  
  .reactDropdown {
    margin: auto;
  }
  
  /* !display purposes - remove */
  .reactDropdown {
    
  

    position: relative;
    display: inline-flex;
    font-size: 0.625rem;
    font-family: Verdana, Arial, sans-serif;
  
    padding:0 25px 0 0 ;
    min-width: 15em;
    cursor: pointer;
    user-select: none;
  
    box-shadow: 0 0.1em 0.2em rgba(0, 0, 0, 0.45);
    outline: none;
    box-sizing: border-box;
    background: #303245;
   
    z-index: 10;
    height: 50px;
    width: 100%;
    border-radius: 12px;
    align-items: center;
    margin-top: 30px;

  }
  
  .reactDropdown:focus-visible {
    outline: none;
    box-shadow: 0 0 0 2px #ed6f1e;
  }
  
  .reactDropdown::before {
    content: "";
    position: absolute;
    z-index: 10;
    top: 0;
    right: 0;
    box-sizing: border-box;
    height: 100%;
    width: 3em;
    padding-top: 0.6em;
    border-left: 0.2em solid #303245;
    border-radius: 0 12px 12px 0;
    background-color: #303245;
  }
  
  .reactDropdown::after {
    content: "";
    /* If not empty make sure to set a charset meta tag */
    position: absolute;
    z-index: 10;
    box-sizing: border-box;
    width: 0.6rem;
    height: 0.6rem;
    border-radius: initial;
    background: #303245;
    top: 50%;
    right: 0;
    transform: translate(-90%, -50%);
    transition: clip-path 330ms ease;
    clip-path: polygon(0 0, 100% 0, 50% 100%, 50% 100%);
  }
  
  .reactDropdown .optList {
    position: absolute;
    top: 100%;
    left: 0;
    list-style: none;
    /* !important will affect the rest of your CSS despite being in a layer */
    margin: 0 !important;
    padding: 0 !important;
    box-sizing: border-box;
    min-width: 100%;
    max-height: 20em;
    overflow-y: auto;
    overflow-x: hidden;
    border: 0.2em solid #367beb;
    border-top-width: 0;
    border-radius: 0 0 18px  18px;
    box-shadow: 0 0.2em 0.4em rgba(0, 0, 0, 0.4);
    background: #303245;
    transition: transform 330ms ease, opacity 330ms ease;
    transform: translateY(1px);
    z-index: 5;
    color: #eee;
    /* margin-top: 5px; */
    
  }
  
  .reactDropdown .optList.hidden {
    max-height: 0;
    visibility: hidden;
  }
  
  .reactDropdown .value {
    display: inline-block;
    /* font-size: 0.75rem; */
    width: 100%;
    overflow: hidden;
    /* white-space: nowrap; */
    text-overflow: ellipsis;
    /* vertical-align: top; */
    font-size: 18px;
    padding: 4px 20px 0;
    color: #eee;
  }
  
  .reactDropdown .option {
    padding: 0.5em 0.3em;
    font-size: 0.75rem;
    opacity: 0;
    animation-delay: calc(40ms * var(--index)) !important;
  }
  .reactDropdown.active{
    border-radius: 12px 12px 0 0;
  }
  .reactDropdown.active::after {
    clip-path: polygon(50% 0, 50% 0, 100% 100%, 0 100%);
  }
  
  .reactDropdown.active .option {
    animation: drop 220ms ease forwards;
  }
  
  .reactDropdown .highlight {
    background-color: #367beb;
    color: white;
    font-weight: bold;
  }
  
  .reactDropdown select {
    visibility: hidden;
    max-height: 0;
    position: absolute;
    padding: 0;
    margin: 0;
  }
  
  @keyframes drop {
    from {
      transform: translateY(-5px);
      opacity: 0;
    }
    to {
      transform: translateY(0);
      opacity: 1;
    }
  }
  